debug=false
spring.output.ansi.enabled=always

spring.application.name=person

# Use random port
server.port=8080

# Configure an embedded H2 database for the command-side persistence
spring.datasource.url=jdbc:h2:tcp://${H2_DB_HOST:localhost}:9090/./axondb;IFEXISTS=true;DB_CLOSE_ON_EXIT=FALSE;SCHEMA=saga
spring.datasource.platform=h2
spring.jpa.hibernate.ddl-auto=update

# Spring Cloud, Eureka client
eureka.instance.instance-id=person
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://${EUREKA_HOST:localhost}:8761/eureka/

# Configure Axon to use distributed command bus
axon.distributed.enabled=true
axon.distributed.load-factor=100

# Configure distributed event handling
axon.amqp.exchange=axonExchange

# Configure processors listening to process AMQP messages
axon.eventhandling.processors[private-address-saga].source=axonQueueMessageSource

# RabbitMQ
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

logging.level.root=info
logging.level.com.github.axonmulti=debug
logging.level.org.springframework.boot=info
logging.level.org.springframework.web=info





